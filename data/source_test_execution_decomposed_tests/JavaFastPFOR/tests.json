{
    "me.lemire.integercompression.BasicTest": [
        "testUnsortedExample_test15_decomposed",
        "zeroinzerouttest_test16_decomposed",
        "testUnsortedExample_test28_decomposed",
        "testUnsortedExample_test16_decomposed",
        "zeroinzerouttest_test17_decomposed",
        "checkDeltaZigzagVB_test0_decomposed",
        "testUnsortedExample_test29_decomposed",
        "testUnsortedExample_test17_decomposed",
        "zeroinzerouttest_test18_decomposed",
        "checkDeltaZigzagVB_test1_decomposed",
        "verifyWithoutMask_test0_decomposed",
        "checkDeltaZigzagPacking_test0_decomposed",
        "testUnsortedExample_test18_decomposed",
        "zeroinzerouttest_test19_decomposed",
        "checkDeltaZigzagVB_test2_decomposed",
        "basictest_test0_decomposed",
        "checkDeltaZigzagPacking_test1_decomposed",
        "testUnsortedExample_test19_decomposed",
        "checkDeltaZigzagVB_test3_decomposed",
        "checkXorBinaryPacking1_test0_decomposed",
        "checkDeltaZigzagPacking_test2_decomposed",
        "fastPforTest_test0_decomposed",
        "checkXorBinaryPacking1_test1_decomposed",
        "checkDeltaZigzagPacking_test3_decomposed",
        "fastPforTest_test1_decomposed",
        "fastPfor128Test_test0_decomposed",
        "checkDeltaZigzagPacking_test4_decomposed",
        "fastPforTest_test2_decomposed",
        "fastPfor128Test_test1_decomposed",
        "checkDeltaZigzagPacking_test5_decomposed",
        "fastPforTest_test3_decomposed",
        "fastPfor128Test_test2_decomposed",
        "checkDeltaZigzagPacking_test6_decomposed",
        "fastPfor128Test_test3_decomposed",
        "checkDeltaZigzagPacking_test7_decomposed",
        "zeroinzerouttest_test0_decomposed",
        "zeroinzerouttest_test1_decomposed",
        "spuriousouttest_test10_decomposed",
        "zeroinzerouttest_test2_decomposed",
        "spuriousouttest_test11_decomposed",
        "zeroinzerouttest_test3_decomposed",
        "testUnsortedExample_test0_decomposed",
        "zeroinzerouttest_test4_decomposed",
        "testUnsortedExample_test1_decomposed",
        "zeroinzerouttest_test5_decomposed",
        "testUnsortedExample_test2_decomposed",
        "varyingLengthTest_test0_decomposed",
        "zeroinzerouttest_test6_decomposed",
        "saulTest_test0_decomposed",
        "testUnsortedExample_test3_decomposed",
        "zeroinzerouttest_test7_decomposed",
        "testUnsortedExample_test40_decomposed",
        "testUnsortedExample_test4_decomposed",
        "zeroinzerouttest_test8_decomposed",
        "spuriousouttest_test0_decomposed",
        "testUnsortedExample_test41_decomposed",
        "checkXorBinaryPacking3_test0_decomposed",
        "testUnsortedExample_test5_decomposed",
        "zeroinzerouttest_test9_decomposed",
        "spuriousouttest_test1_decomposed",
        "testUnsortedExample_test42_decomposed",
        "checkXorBinaryPacking3_test1_decomposed",
        "testUnsortedExample_test6_decomposed",
        "testUnsortedExample_test30_decomposed",
        "varyingLengthTest2_test0_decomposed",
        "spuriousouttest_test2_decomposed",
        "testUnsortedExample_test43_decomposed",
        "checkXorBinaryPacking3_test2_decomposed",
        "testUnsortedExample_test7_decomposed",
        "testUnsortedExample_test31_decomposed",
        "zeroinzerouttest_test20_decomposed",
        "checkXorBinaryPacking_test0_decomposed",
        "verifyBitPacking_test0_decomposed",
        "spuriousouttest_test3_decomposed",
        "testUnsortedExample_test44_decomposed",
        "testUnsortedExample_test8_decomposed",
        "testUnsortedExample_test32_decomposed",
        "testUnsortedExample_test20_decomposed",
        "zeroinzerouttest_test21_decomposed",
        "checkXorBinaryPacking_test1_decomposed",
        "spuriousouttest_test4_decomposed",
        "testUnsortedExample_test9_decomposed",
        "testUnsortedExample_test33_decomposed",
        "testUnsortedExample_test21_decomposed",
        "zeroinzerouttest_test22_decomposed",
        "spuriousouttest_test5_decomposed",
        "zeroinzerouttest_test10_decomposed",
        "testUnsortedExample_test34_decomposed",
        "testUnsortedExample_test22_decomposed",
        "zeroinzerouttest_test23_decomposed",
        "testUnsortedExample_test10_decomposed",
        "spuriousouttest_test6_decomposed",
        "zeroinzerouttest_test11_decomposed",
        "testUnsortedExample_test35_decomposed",
        "testUnsortedExample_test23_decomposed",
        "zeroinzerouttest_test24_decomposed",
        "testUnsortedExample_test11_decomposed",
        "spuriousouttest_test7_decomposed",
        "zeroinzerouttest_test12_decomposed",
        "verifyWithExceptions_test0_decomposed",
        "testUnsortedExample_test36_decomposed",
        "testUnsortedExample_test24_decomposed",
        "zeroinzerouttest_test25_decomposed",
        "checkXorBinaryPacking2_test0_decomposed",
        "testUnsortedExample_test12_decomposed",
        "spuriousouttest_test8_decomposed",
        "zeroinzerouttest_test13_decomposed",
        "testUnsortedExample_test37_decomposed",
        "testUnsortedExample_test25_decomposed",
        "zeroinzerouttest_test26_decomposed",
        "checkXorBinaryPacking2_test1_decomposed",
        "testUnsortedExample_test13_decomposed",
        "spuriousouttest_test9_decomposed",
        "zeroinzerouttest_test14_decomposed",
        "testUnsortedExample_test38_decomposed",
        "testUnsortedExample_test26_decomposed",
        "testUnsortedExample_test14_decomposed",
        "zeroinzerouttest_test15_decomposed",
        "testUnsortedExample_test39_decomposed",
        "testUnsortedExample_test27_decomposed"
    ],
    "me.lemire.integercompression.ExampleTest": [
        "unsortedExample_test6_decomposed",
        "headlessDemo_test6_decomposed",
        "headlessDemo_test10_decomposed",
        "basicExampleHeadless_test4_decomposed",
        "unsortedExample_test7_decomposed",
        "headlessDemo_test7_decomposed",
        "basicExampleHeadless_test5_decomposed",
        "headlessDemo_test8_decomposed",
        "basicExampleHeadless_test6_decomposed",
        "headlessDemo_test9_decomposed",
        "basicExampleHeadless_test7_decomposed",
        "basicExample_test0_decomposed",
        "basicExample_test1_decomposed",
        "advancedExample_test0_decomposed",
        "basicExample_test2_decomposed",
        "advancedExample_test1_decomposed",
        "basicExample_test3_decomposed",
        "advancedExample_test2_decomposed",
        "basicExample_test4_decomposed",
        "advancedExample_test3_decomposed",
        "basicExample_test5_decomposed",
        "advancedExample_test4_decomposed",
        "basicExample_test6_decomposed",
        "advancedExample_test5_decomposed",
        "basicExample_test7_decomposed",
        "advancedExample_test6_decomposed",
        "superSimpleExample_test0_decomposed",
        "advancedExample_test7_decomposed",
        "superSimpleExample_test1_decomposed",
        "advancedExample_test8_decomposed",
        "superSimpleExample_test2_decomposed",
        "advancedExample_test9_decomposed",
        "unsortedExample_test0_decomposed",
        "headlessDemo_test0_decomposed",
        "superSimpleExample_test3_decomposed",
        "unsortedExample_test1_decomposed",
        "headlessDemo_test1_decomposed",
        "unsortedExample_test2_decomposed",
        "headlessDemo_test2_decomposed",
        "basicExampleHeadless_test0_decomposed",
        "unsortedExample_test3_decomposed",
        "headlessDemo_test3_decomposed",
        "basicExampleHeadless_test1_decomposed",
        "unsortedExample_test4_decomposed",
        "headlessDemo_test4_decomposed",
        "basicExampleHeadless_test2_decomposed",
        "unsortedExample_test5_decomposed",
        "headlessDemo_test5_decomposed",
        "basicExampleHeadless_test3_decomposed"
    ],
    "me.lemire.integercompression.IntCompressorTest": [
        "basicIntegratedTest_test0_decomposed",
        "basicTest_test0_decomposed",
        "superSimpleExample_test0_decomposed",
        "superSimpleExample_test1_decomposed",
        "superSimpleExample_test2_decomposed",
        "superSimpleExample_test3_decomposed"
    ],
    "me.lemire.integercompression.DeltaZigzagEncodingTest": [
        "checkDecodeSimple_test0_decomposed",
        "checkDecodeSimple_test1_decomposed",
        "checkZigzagEncode_test0_decomposed",
        "checkSpots_test0_decomposed",
        "checkZigzagEncode_test1_decomposed",
        "checkSpots_test1_decomposed",
        "checkEncodeSimple_test0_decomposed",
        "checkEncodeSimple_test1_decomposed",
        "checkZigzagDecoder_test0_decomposed",
        "checkZigzagDecoder_test1_decomposed"
    ],
    "me.lemire.longcompression.TestLongAs2IntsCodec": [
        "testCodec_MinValue_test0_decomposed",
        "testCodec_intermediateHighPowerOfTwo_test0_decomposed",
        "testCodec_Minus1_test0_decomposed",
        "testCodec_ZeroThenAllPowerOfTwo_test0_decomposed",
        "testCodec_ZeroTimes128Minus1_test0_decomposed",
        "testCodec_ZeroTimes127Minus1_test0_decomposed",
        "testCodec_Zero_test0_decomposed",
        "testCodec_ZeroTimes8Minus1_test0_decomposed",
        "testCodec_allPowerOfTwo_test0_decomposed",
        "testCodec_ZeroMinValue_test0_decomposed"
    ],
    "me.lemire.integercompression.SkippableBasicTest": [
        "varyingLengthTest_test0_decomposed",
        "varyingLengthTest2_test0_decomposed",
        "consistentTest_test0_decomposed"
    ],
    "me.lemire.longcompression.TestLongVariableByte": [
        "testCodec_MinValue_test0_decomposed",
        "testCodec_intermediateHighPowerOfTwo_test0_decomposed",
        "testCodec_intermediateHighPowerOfTwo_test1_decomposed",
        "testCodec_ZeroMinus1_test0_decomposed",
        "testCodec_intermediateHighPowerOfTwo_test2_decomposed",
        "testCodec_ZeroThenAllPowerOfTwo_test0_decomposed",
        "testCodec_ZeroTimes128Minus1_test0_decomposed",
        "testCodec_ZeroTimes127Minus1_test0_decomposed",
        "testCodec_ZeroTimes8Minus1_test0_decomposed",
        "testCodec_allPowerOfTwo_test0_decomposed",
        "testCodec_ZeroMinValue_test0_decomposed"
    ],
    "me.lemire.longcompression.LongBasicTest": [
        "fastPforTest_test0_decomposed",
        "fastPfor128Test_test0_decomposed",
        "varyingLengthTest_test0_decomposed",
        "saulTest_test0_decomposed",
        "varyingLengthTest2_test0_decomposed"
    ],
    "me.lemire.integercompression.ResourcedTest": [
        "IntCompressorTest_test3_decomposed",
        "IntCompressorTest_test0_decomposed",
        "IntCompressorTest_test1_decomposed",
        "IntCompressorTest_test2_decomposed"
    ],
    "me.lemire.integercompression.BoundaryTest": [
        "testIntegratedComposition_test0_decomposed",
        "testIntegratedComposition_test1_decomposed",
        "testComposition_test0_decomposed",
        "testComposition_test1_decomposed"
    ],
    "me.lemire.integercompression.TestUtils": [
        "testPacking_test0_decomposed",
        "testPackingw_test0_decomposed"
    ],
    "me.lemire.integercompression.XorBinaryPackingTest": [
        "compressAndUncompress5_test0_decomposed",
        "compressAndUncompress0_test0_decomposed",
        "compressAndUncompress4_test0_decomposed",
        "compressAndUncompress3_test0_decomposed",
        "compressAndUncompress2_test0_decomposed",
        "compressAndUncompress1_test0_decomposed"
    ],
    "me.lemire.longcompression.SkippableLongBasicTest": [
        "varyingLengthTest_test0_decomposed",
        "varyingLengthTest2_test0_decomposed",
        "consistentTest_test0_decomposed"
    ],
    "me.lemire.integercompression.ByteBasicTest": [
        "varyingLengthTest_test0_decomposed",
        "saulTest_test0_decomposed",
        "varyingLengthTest2_test0_decomposed"
    ],
    "me.lemire.integercompression.AdhocTest": [
        "biggerCompressedArray2_test3_decomposed",
        "biggerCompressedArray1_test0_decomposed",
        "biggerCompressedArray1_test1_decomposed",
        "testIssue29_test0_decomposed",
        "testIssue29b_test0_decomposed",
        "biggerCompressedArray0_test0_decomposed",
        "biggerCompressedArray0_test1_decomposed",
        "biggerCompressedArray0_test2_decomposed",
        "biggerCompressedArray0_test3_decomposed",
        "testIssue41_test0_decomposed",
        "biggerCompressedArray2_test0_decomposed",
        "biggerCompressedArray2_test1_decomposed",
        "biggerCompressedArray2_test2_decomposed"
    ]
}