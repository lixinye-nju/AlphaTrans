{
    "me.lemire.integercompression.BasicTest": {
        "testUnsortedExample_test15_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test16_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test28_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test16_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test17_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagVB_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test29_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test17_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test18_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagVB_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "verifyWithoutMask_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask1",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask17",
                "fastpackwithoutmask18",
                "fastpackwithoutmask19",
                "fastpackwithoutmask2",
                "fastpackwithoutmask20",
                "fastpackwithoutmask21",
                "fastpackwithoutmask22",
                "fastpackwithoutmask23",
                "fastpackwithoutmask24",
                "fastpackwithoutmask25",
                "fastpackwithoutmask26",
                "fastpackwithoutmask27",
                "fastpackwithoutmask28",
                "fastpackwithoutmask29",
                "fastpackwithoutmask3",
                "fastpackwithoutmask30",
                "fastpackwithoutmask4",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack0",
                "fastunpack1",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack2",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack24",
                "fastunpack25",
                "fastunpack26",
                "fastunpack27",
                "fastunpack28",
                "fastunpack29",
                "fastunpack3",
                "fastunpack30",
                "fastunpack4",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test18_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test19_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagVB_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basictest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [
                "delta0",
                "fastinverseDelta0"
            ],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack10",
                "integratedpack11",
                "integratedpack12",
                "integratedpack13",
                "integratedpack14",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack2",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22",
                "integratedpack23",
                "integratedpack3",
                "integratedpack4",
                "integratedpack5",
                "integratedpack6",
                "integratedpack7",
                "integratedpack8",
                "integratedpack9",
                "integratedunpack",
                "integratedunpack1",
                "integratedunpack10",
                "integratedunpack11",
                "integratedunpack12",
                "integratedunpack13",
                "integratedunpack14",
                "integratedunpack15",
                "integratedunpack16",
                "integratedunpack17",
                "integratedunpack18",
                "integratedunpack19",
                "integratedunpack2",
                "integratedunpack20",
                "integratedunpack21",
                "integratedunpack22",
                "integratedunpack23",
                "integratedunpack3",
                "integratedunpack4",
                "integratedunpack5",
                "integratedunpack6",
                "integratedunpack7",
                "integratedunpack8",
                "integratedunpack9"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack1",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack13",
                "fastpack14",
                "fastpack15",
                "fastpack16",
                "fastpack17",
                "fastpack18",
                "fastpack19",
                "fastpack2",
                "fastpack20",
                "fastpack3",
                "fastpack4",
                "fastpack5",
                "fastpack6",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastpackwithoutmask",
                "fastpackwithoutmask1",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask17",
                "fastpackwithoutmask18",
                "fastpackwithoutmask19",
                "fastpackwithoutmask2",
                "fastpackwithoutmask20",
                "fastpackwithoutmask21",
                "fastpackwithoutmask22",
                "fastpackwithoutmask23",
                "fastpackwithoutmask3",
                "fastpackwithoutmask4",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack1",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack2",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack3",
                "fastunpack4",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [
                "<init>",
                "generateUniformHash",
                "negate",
                "generateUniform",
                "generateUniformBitmap"
            ],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": [
                "<init>",
                "fillUniform",
                "fillClustered",
                "generateClustered"
            ]
        },
        "checkDeltaZigzagPacking_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test19_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagVB_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [
                "delta0",
                "fastinverseDelta0"
            ],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [
                "<init>",
                "generateUniformHash",
                "negate",
                "generateUniform",
                "generateUniformBitmap"
            ],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": [
                "<init>",
                "fillUniform",
                "fillClustered",
                "generateClustered"
            ]
        },
        "checkXorBinaryPacking1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPforTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking1_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPforTest_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPfor128Test_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPforTest_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPfor128Test_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPforTest_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPfor128Test_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask15",
                "fastpackwithoutmask8",
                "fastunpack",
                "fastunpack15",
                "fastunpack8"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt",
                "encodeArray0",
                "encodeArray1"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "pack",
                "unpack"
            ],
            "me/lemire/integercompression/Util": [
                "maxbits32",
                "bits"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt",
                "decodeArray0"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPfor128Test_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDeltaZigzagPacking_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [
                "delta0",
                "fastinverseDelta0"
            ],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask1",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask17",
                "fastpackwithoutmask18",
                "fastpackwithoutmask19",
                "fastpackwithoutmask2",
                "fastpackwithoutmask20",
                "fastpackwithoutmask21",
                "fastpackwithoutmask22",
                "fastpackwithoutmask23",
                "fastpackwithoutmask3",
                "fastpackwithoutmask4",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack0",
                "fastunpack1",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack2",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack3",
                "fastunpack4",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt",
                "encodeArray0",
                "encodeArray1"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "pack",
                "unpack"
            ],
            "me/lemire/integercompression/Util": [
                "maxbits32",
                "bits"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt",
                "decodeArray0"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [
                "<init>",
                "generateUniformHash",
                "negate",
                "generateUniform",
                "generateUniformBitmap"
            ],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": [
                "<init>",
                "fillUniform",
                "fillClustered",
                "generateClustered"
            ]
        },
        "zeroinzerouttest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test10_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test11_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack32",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask2",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack2",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt",
                "encodeArray0",
                "encodeArray1"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/S16": [
                "estimatecompress",
                "fakecompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "compress0",
                "encode30",
                "encode40",
                "encode41",
                "encode50",
                "encode51",
                "encode60",
                "encode70",
                "uncompress0",
                "decode70",
                "decode60",
                "decode51",
                "decode50",
                "decode41",
                "decode40",
                "decode30",
                "toString",
                "headlessCompress",
                "headlessUncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>",
                "toString",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress0",
                "toString",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "pack",
                "unpack",
                "toString"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxbits32",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt",
                "decodeArray0"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "saulTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack32",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "compressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test40_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack32",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "compressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test8_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test41_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking3_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack32",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "compressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test9_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test42_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking3_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack2",
                "fastpack4",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack2",
                "fastunpack32",
                "fastunpack4",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test30_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastpack4",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask1",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack1",
                "fastunpack32",
                "fastunpack4"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt",
                "encodeArray0",
                "encodeArray1"
            ],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0",
                "toString"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>",
                "toString",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress0",
                "toString",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "pack",
                "unpack",
                "toString"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxbits32",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt",
                "decodeArray0"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test43_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking3_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask17",
                "fastpackwithoutmask18",
                "fastpackwithoutmask19",
                "fastpackwithoutmask20",
                "fastpackwithoutmask21",
                "fastpackwithoutmask22",
                "fastpackwithoutmask23",
                "fastpackwithoutmask24",
                "fastpackwithoutmask25",
                "fastpackwithoutmask26",
                "fastpackwithoutmask27",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack24",
                "fastunpack25",
                "fastunpack26",
                "fastunpack27",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [
                "<init>",
                "generateUniformHash",
                "negate",
                "generateUniform",
                "generateUniformBitmap"
            ],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": [
                "<init>",
                "fillUniform",
                "fillClustered",
                "generateClustered"
            ]
        },
        "testUnsortedExample_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack2",
                "fastpack4",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack2",
                "fastunpack32",
                "fastunpack4",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test31_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test20_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "verifyBitPacking_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack1",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack13",
                "fastpack14",
                "fastpack15",
                "fastpack16",
                "fastpack17",
                "fastpack18",
                "fastpack19",
                "fastpack2",
                "fastpack20",
                "fastpack21",
                "fastpack22",
                "fastpack23",
                "fastpack24",
                "fastpack25",
                "fastpack26",
                "fastpack27",
                "fastpack28",
                "fastpack29",
                "fastpack3",
                "fastpack30",
                "fastpack4",
                "fastpack5",
                "fastpack6",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastunpack",
                "fastunpack0",
                "fastunpack1",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack2",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack24",
                "fastunpack25",
                "fastunpack26",
                "fastunpack27",
                "fastunpack28",
                "fastunpack29",
                "fastunpack3",
                "fastunpack30",
                "fastunpack4",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test44_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test8_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack2",
                "fastpack4",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack2",
                "fastunpack32",
                "fastunpack4",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test32_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test20_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test21_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test9_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack2",
                "fastpack4",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack2",
                "fastunpack32",
                "fastunpack4",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test33_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test21_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test22_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test10_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test34_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test22_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test23_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test10_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test11_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test35_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test23_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test24_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test11_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test12_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "verifyWithExceptions_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack1",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack13",
                "fastpack14",
                "fastpack15",
                "fastpack16",
                "fastpack17",
                "fastpack18",
                "fastpack19",
                "fastpack2",
                "fastpack20",
                "fastpack21",
                "fastpack22",
                "fastpack23",
                "fastpack24",
                "fastpack25",
                "fastpack26",
                "fastpack27",
                "fastpack28",
                "fastpack29",
                "fastpack3",
                "fastpack30",
                "fastpack4",
                "fastpack5",
                "fastpack6",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastunpack",
                "fastunpack0",
                "fastunpack1",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack17",
                "fastunpack18",
                "fastunpack19",
                "fastunpack2",
                "fastunpack20",
                "fastunpack21",
                "fastunpack22",
                "fastunpack23",
                "fastunpack24",
                "fastunpack25",
                "fastunpack26",
                "fastunpack27",
                "fastunpack28",
                "fastunpack29",
                "fastunpack3",
                "fastunpack30",
                "fastunpack4",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test36_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test24_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test25_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test12_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test8_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test13_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test37_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test25_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test26_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkXorBinaryPacking2_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack14",
                "fastunpack32",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test13_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "spuriousouttest_test9_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "intValue"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test14_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test38_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test26_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test14_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "zeroinzerouttest_test15_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test39_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack0",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack0",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testUnsortedExample_test27_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack32",
                "integratedunpack",
                "integratedunpack32"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack12",
                "fastpack2",
                "fastpack25",
                "fastpack32",
                "fastpack4",
                "fastpack5",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask14",
                "fastpackwithoutmask32",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack0",
                "fastunpack12",
                "fastunpack14",
                "fastunpack2",
                "fastunpack25",
                "fastunpack32",
                "fastunpack4",
                "fastunpack5",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.ExampleTest": {
        "unsortedExample_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack5",
                "fastunpack",
                "fastunpack12",
                "fastunpack2",
                "fastunpack5"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test10_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set",
                "toString"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack5",
                "fastunpack",
                "fastunpack12",
                "fastunpack2",
                "fastunpack5"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test8_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set",
                "toString"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test9_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set",
                "toString"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExample_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test6_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test7_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test8_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22",
                "integratedunpack",
                "integratedunpack1",
                "integratedunpack15",
                "integratedunpack16",
                "integratedunpack17",
                "integratedunpack18",
                "integratedunpack19",
                "integratedunpack20",
                "integratedunpack21",
                "integratedunpack22"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "advancedExample_test9_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedpack15",
                "integratedpack16",
                "integratedpack17",
                "integratedpack18",
                "integratedpack19",
                "integratedpack20",
                "integratedpack21",
                "integratedpack22",
                "integratedunpack",
                "integratedunpack1",
                "integratedunpack15",
                "integratedunpack16",
                "integratedunpack17",
                "integratedunpack18",
                "integratedunpack19",
                "integratedunpack20",
                "integratedunpack21",
                "integratedunpack22"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack5"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack5"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test4_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "unsortedExample_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack12",
                "fastpack2",
                "fastpack5"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "compress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "headlessDemo_test5_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicExampleHeadless_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.IntCompressorTest": {
        "basicIntegratedTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack2",
                "integratedpack3",
                "integratedunpack",
                "integratedunpack2",
                "integratedunpack3"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "basicTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "superSimpleExample_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>"
            ],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.DeltaZigzagEncodingTest": {
        "checkDecodeSimple_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkDecodeSimple_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>",
                "getContextValue"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt",
                "decodeArray0",
                "decodeArray1",
                "decodeArray2"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkZigzagEncode_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkSpots_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkZigzagEncode_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>",
                "setContextValue"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkSpots_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>",
                "setContextValue"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkEncodeSimple_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkEncodeSimple_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [
                "<init>",
                "encodeInt",
                "encodeArray0",
                "encodeArray3"
            ],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>",
                "getContextValue"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkZigzagDecoder_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "checkZigzagDecoder_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [
                "<init>",
                "setContextValue"
            ],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [
                "<init>",
                "decodeInt"
            ],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.longcompression.TestLongAs2IntsCodec": {
        "testCodec_MinValue_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_intermediateHighPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroThenAllPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes128Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastunpack",
                "fastunpack0"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes127Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_Zero_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes8Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_allPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroMinValue_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.SkippableBasicTest": {
        "varyingLengthTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/S16": [
                "estimatecompress",
                "fakecompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack0",
                "fastpack32",
                "fastpack4",
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32",
                "fastunpack4"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "headlessUncompress",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "consistentTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack7",
                "fastpackwithoutmask",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString"
            ],
            "me/lemire/integercompression/S16": [
                "estimatecompress",
                "fakecompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "toString",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.longcompression.TestLongVariableByte": {
        "testCodec_MinValue_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_intermediateHighPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_intermediateHighPowerOfTwo_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroMinus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_intermediateHighPowerOfTwo_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroThenAllPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes128Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes127Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroTimes8Minus1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_allPowerOfTwo_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testCodec_ZeroMinValue_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "compress1",
                "uncompress1",
                "uncompress1",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.longcompression.LongBasicTest": {
        "fastPforTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress1",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress1",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "fastPfor128Test_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress1",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress1",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress1",
                "toString",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress1",
                "toString",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "saulTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress1",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress1",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress1",
                "toString",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [
                "high",
                "low",
                "pack",
                "<clinit>"
            ],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "uncompress1",
                "toString",
                "headlessUncompress",
                "compress0"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [
                "<init>",
                "LongAs2IntsCodec1",
                "compress0",
                "uncompress1",
                "<clinit>"
            ],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask32",
                "fastunpack",
                "fastunpack0",
                "fastunpack32"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [
                "<clinit>"
            ],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.ResourcedTest": {
        "IntCompressorTest_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack13",
                "fastpack14",
                "fastpack15",
                "fastpack16",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "IntCompressorTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "IntCompressorTest_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "IntCompressorTest_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [
                "fastpack",
                "fastpack10",
                "fastpack11",
                "fastpack12",
                "fastpack13",
                "fastpack14",
                "fastpack15",
                "fastpack16",
                "fastpack7",
                "fastpack8",
                "fastpack9",
                "fastpackwithoutmask",
                "fastpackwithoutmask10",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask14",
                "fastpackwithoutmask15",
                "fastpackwithoutmask16",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack10",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack14",
                "fastunpack15",
                "fastunpack16",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "<init>",
                "headlessCompress",
                "compressblock",
                "decompressblock",
                "headlessUncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [
                "compress",
                "estimatecompress",
                "compressblock",
                "fakecompressblock",
                "decompressblock",
                "uncompress",
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [
                "<init>",
                "compress",
                "uncompress"
            ],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/OptPFD": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [
                "estimatecompress",
                "compress",
                "uncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [
                "<init>",
                "headlessCompress",
                "getBestBFromData",
                "encodePage",
                "headlessUncompress",
                "decodePage",
                "<clinit>"
            ],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "intValue",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "smallerorequalthan",
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.BoundaryTest": {
        "testIntegratedComposition_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testIntegratedComposition_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [
                "integratedpack",
                "integratedpack1",
                "integratedunpack",
                "integratedunpack1"
            ],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxdiffbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testComposition_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testComposition_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastunpack",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "maxbits",
                "bits",
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.TestUtils": {
        "testPacking_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "packsize",
                "pack",
                "unpack"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testPackingw_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "packsizew",
                "packw",
                "unpackw"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.XorBinaryPackingTest": {
        "compressAndUncompress5_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastpackwithoutmask8",
                "fastunpack",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7",
                "fastunpack8"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "compressAndUncompress0_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask1",
                "fastpackwithoutmask2",
                "fastpackwithoutmask3",
                "fastpackwithoutmask4",
                "fastunpack",
                "fastunpack1",
                "fastunpack2",
                "fastunpack3",
                "fastunpack4"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "compressAndUncompress4_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask2",
                "fastunpack",
                "fastunpack0",
                "fastunpack2"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "compressAndUncompress3_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask0",
                "fastpackwithoutmask2",
                "fastunpack",
                "fastunpack0",
                "fastunpack2"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "compressAndUncompress2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask11",
                "fastpackwithoutmask12",
                "fastpackwithoutmask13",
                "fastpackwithoutmask9",
                "fastunpack",
                "fastunpack11",
                "fastunpack12",
                "fastunpack13",
                "fastunpack9"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "compressAndUncompress1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "xorMaxBits",
                "xorPack",
                "xorUnpack"
            ],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [
                "fastpackwithoutmask",
                "fastpackwithoutmask5",
                "fastpackwithoutmask6",
                "fastpackwithoutmask7",
                "fastunpack",
                "fastunpack5",
                "fastunpack6",
                "fastunpack7"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.longcompression.SkippableLongBasicTest": {
        "varyingLengthTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [
                "shiftme",
                "<clinit>"
            ],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "consistentTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress",
                "makeBuffer",
                "<clinit>"
            ],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [
                "<init>",
                "headlessCompress",
                "toString",
                "headlessUncompress"
            ],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.ByteBasicTest": {
        "varyingLengthTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "saulTest_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "varyingLengthTest2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress1",
                "uncompress1"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "IntWrapper1",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [
                "<clinit>"
            ],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    },
    "me.lemire.integercompression.AdhocTest": {
        "biggerCompressedArray2_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray1_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray1_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testIssue29_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "compress0",
                "uncompress0",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testIssue29b_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray0_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray0_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray0_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray0_test3_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "testIssue41_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [
                "<init>",
                "headlessCompress",
                "headlessUncompress",
                "makeBuffer"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [
                "<init>",
                "headlessCompress",
                "headlessUncompress"
            ],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray2_test0_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>"
            ],
            "me/lemire/integercompression/IntWrapper": [],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray2_test1_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        },
        "biggerCompressedArray2_test2_decomposed": {
            "me/lemire/longcompression/differential/LongDelta": [],
            "me/lemire/integercompression/differential/IntegratedIntCompressor": [],
            "me/lemire/integercompression/differential/IntegratedComposition": [],
            "me/lemire/integercompression/differential/IntegratedVariableByte": [],
            "me/lemire/integercompression/differential/SkippableIntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBinaryPacking": [],
            "me/lemire/integercompression/differential/SkippableIntegratedComposition": [],
            "me/lemire/integercompression/differential/XorBinaryPacking": [],
            "me/lemire/integercompression/differential/Delta": [],
            "me/lemire/integercompression/differential/IntegratedIntegerCODEC": [],
            "me/lemire/integercompression/differential/IntegratedBitPacking": [],
            "me/lemire/integercompression/differential/IntegratedByteIntegerCODEC": [],
            "me/lemire/longcompression/LongUtil": [],
            "me/lemire/longcompression/LongVariableByte": [],
            "me/lemire/longcompression/SkippableLongCODEC": [],
            "me/lemire/longcompression/RoaringIntPacking": [],
            "me/lemire/longcompression/LongCODEC": [],
            "me/lemire/longcompression/LongJustCopy": [],
            "me/lemire/longcompression/RoaringIntPacking$1": [],
            "me/lemire/longcompression/ByteLongCODEC": [],
            "me/lemire/longcompression/LongAs2IntsCodec": [],
            "me/lemire/longcompression/IntegratedLongCODEC": [],
            "me/lemire/longcompression/SkippableLongComposition": [],
            "me/lemire/longcompression/LongComposition": [],
            "me/lemire/integercompression/SkippableComposition": [],
            "me/lemire/integercompression/BitPacking": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Encoder": [],
            "me/lemire/integercompression/Simple16": [],
            "me/lemire/integercompression/NewPFD": [],
            "me/lemire/integercompression/BinaryPacking": [],
            "me/lemire/integercompression/S16": [],
            "me/lemire/integercompression/GroupSimple9": [],
            "me/lemire/integercompression/IntCompressor": [],
            "me/lemire/integercompression/FastPFOR": [
                "<init>",
                "FastPFOR1",
                "makeBuffer"
            ],
            "me/lemire/integercompression/OptPFDS16": [],
            "me/lemire/integercompression/OptPFD": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Context": [],
            "me/lemire/integercompression/S9": [],
            "me/lemire/integercompression/FastPFOR128": [
                "<init>",
                "FastPFOR1281",
                "headlessUncompress",
                "compress0",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS9": [],
            "me/lemire/integercompression/IntegerCODEC": [],
            "me/lemire/integercompression/OptPFDS9": [],
            "me/lemire/integercompression/VariableByte": [
                "<init>",
                "extract7bits",
                "extract7bitsmaskless",
                "compress0",
                "headlessCompress",
                "uncompress0",
                "makeBuffer"
            ],
            "me/lemire/integercompression/NewPFDS16": [],
            "me/lemire/integercompression/Composition": [
                "<init>",
                "compress0",
                "uncompress0"
            ],
            "me/lemire/integercompression/IntWrapper": [
                "<init>",
                "add",
                "get",
                "increment",
                "set"
            ],
            "me/lemire/integercompression/DeltaZigzagEncoding": [],
            "me/lemire/integercompression/Simple9": [],
            "me/lemire/integercompression/SkippableIntegerCODEC": [],
            "me/lemire/integercompression/Kamikaze": [],
            "me/lemire/integercompression/DeltaZigzagVariableByte": [],
            "me/lemire/integercompression/JustCopy": [],
            "me/lemire/integercompression/DeltaZigzagBinaryPacking": [],
            "me/lemire/integercompression/Util": [
                "greatestMultiple"
            ],
            "me/lemire/integercompression/ByteIntegerCODEC": [],
            "me/lemire/integercompression/UncompressibleInputException": [],
            "me/lemire/integercompression/DeltaZigzagEncoding$Decoder": [],
            "me/lemire/integercompression/synth/UniformDataGenerator": [],
            "me/lemire/integercompression/synth/ClusteredDataGenerator": []
        }
    }
}