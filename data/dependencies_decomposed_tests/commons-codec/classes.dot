digraph "classes" {
    // Path: java_projects/cleaned_final_projects_decomposed_tests/commons-codec/target/classes
   "org.apache.commons.codec.BinaryDecoder"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.BinaryDecoder"           -> "org.apache.commons.codec.Decoder (classes)";
   "org.apache.commons.codec.BinaryDecoder"           -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.BinaryEncoder"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.BinaryEncoder"           -> "org.apache.commons.codec.Encoder (classes)";
   "org.apache.commons.codec.BinaryEncoder"           -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.CharEncoding"            -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.CharEncoding"            -> "java.lang.String (java.base)";
   "org.apache.commons.codec.Charsets"                -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.Charsets"                -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.Charsets"                -> "java.lang.String (java.base)";
   "org.apache.commons.codec.Charsets"                -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.Charsets"                -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.CodecPolicy"             -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.CodecPolicy"             -> "java.lang.Enum (java.base)";
   "org.apache.commons.codec.CodecPolicy"             -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.CodecPolicy"             -> "java.lang.String (java.base)";
   "org.apache.commons.codec.Decoder"                 -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.Decoder"                 -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.DecoderException"        -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.DecoderException"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.DecoderException"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.Encoder"                 -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.Encoder"                 -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.EncoderException"        -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.EncoderException"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.EncoderException"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.ClassLoader (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.String (java.base)";
   "org.apache.commons.codec.Resources"               -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.StringDecoder"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.StringDecoder"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.StringDecoder"           -> "org.apache.commons.codec.Decoder (classes)";
   "org.apache.commons.codec.StringDecoder"           -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.StringEncoder"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.StringEncoder"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.StringEncoder"           -> "org.apache.commons.codec.Encoder (classes)";
   "org.apache.commons.codec.StringEncoder"           -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.StringEncoderComparator" -> "java.lang.Comparable (java.base)";
   "org.apache.commons.codec.StringEncoderComparator" -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.StringEncoderComparator" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.StringEncoderComparator" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.StringEncoderComparator" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.StringEncoderComparator" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.binary.Base16"           -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base16"           -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.binary.Base16"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base16"           -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base16"           -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base16"           -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base16"           -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.Base16InputStream" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base16InputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base16InputStream" -> "org.apache.commons.codec.binary.Base16 (classes)";
   "org.apache.commons.codec.binary.Base16InputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base16InputStream" -> "org.apache.commons.codec.binary.BaseNCodecInputStream (classes)";
   "org.apache.commons.codec.binary.Base16OutputStream" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base16OutputStream" -> "org.apache.commons.codec.binary.Base16 (classes)";
   "org.apache.commons.codec.binary.Base16OutputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base16OutputStream" -> "org.apache.commons.codec.binary.BaseNCodecOutputStream (classes)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.Base32"           -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base32"           -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base32"           -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.Base32"           -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.binary.Base32InputStream" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base32InputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base32InputStream" -> "org.apache.commons.codec.binary.Base32 (classes)";
   "org.apache.commons.codec.binary.Base32InputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base32InputStream" -> "org.apache.commons.codec.binary.BaseNCodecInputStream (classes)";
   "org.apache.commons.codec.binary.Base32OutputStream" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base32OutputStream" -> "org.apache.commons.codec.binary.Base32 (classes)";
   "org.apache.commons.codec.binary.Base32OutputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base32OutputStream" -> "org.apache.commons.codec.binary.BaseNCodecOutputStream (classes)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.math.BigInteger (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.binary.Base64"           -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base64"           -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base64"           -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.Base64"           -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.binary.Base64InputStream" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base64InputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base64InputStream" -> "org.apache.commons.codec.binary.Base64 (classes)";
   "org.apache.commons.codec.binary.Base64InputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base64InputStream" -> "org.apache.commons.codec.binary.BaseNCodecInputStream (classes)";
   "org.apache.commons.codec.binary.Base64OutputStream" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStream" -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.Base64OutputStream" -> "org.apache.commons.codec.binary.Base64 (classes)";
   "org.apache.commons.codec.binary.Base64OutputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.Base64OutputStream" -> "org.apache.commons.codec.binary.BaseNCodecOutputStream (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.OutOfMemoryError (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.BaseNCodec"       -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.Boolean (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.binary.BaseNCodec$Context" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.io.FilterInputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.BaseNCodecInputStream" -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.io.FilterOutputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.binary.BaseNCodecOutputStream" -> "org.apache.commons.codec.binary.BaseNCodec$Context (classes)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.binary.BinaryCodec"      -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.binary.CharSequenceUtils" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtils" -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtils" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtils" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.ClassCastException (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.Hex"              -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.binary.Hex"              -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.binary.Hex"              -> "org.apache.commons.codec.CharEncoding (classes)";
   "org.apache.commons.codec.binary.Hex"              -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.binary.Hex"              -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.StringUtils"      -> "org.apache.commons.codec.binary.CharSequenceUtils (classes)";
   "org.apache.commons.codec.cli.Digest"              -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.String (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.lang.System (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.cli.Digest"              -> "org.apache.commons.codec.binary.Hex (classes)";
   "org.apache.commons.codec.digest.B64"              -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.B64"              -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.B64"              -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.B64"              -> "java.util.Random (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.Byte (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.digest.Blake3"           -> "org.apache.commons.codec.digest.Blake3$ChunkState (classes)";
   "org.apache.commons.codec.digest.Blake3"           -> "org.apache.commons.codec.digest.Blake3$EngineState (classes)";
   "org.apache.commons.codec.digest.Blake3"           -> "org.apache.commons.codec.digest.Blake3$Output (classes)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "org.apache.commons.codec.digest.Blake3 (classes)";
   "org.apache.commons.codec.digest.Blake3$ChunkState" -> "org.apache.commons.codec.digest.Blake3$Output (classes)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "org.apache.commons.codec.digest.Blake3 (classes)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "org.apache.commons.codec.digest.Blake3$ChunkState (classes)";
   "org.apache.commons.codec.digest.Blake3$EngineState" -> "org.apache.commons.codec.digest.Blake3$Output (classes)";
   "org.apache.commons.codec.digest.Blake3$Output"    -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.digest.Blake3$Output"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3$Output"    -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.Blake3$Output"    -> "org.apache.commons.codec.digest.Blake3 (classes)";
   "org.apache.commons.codec.digest.Crypt"            -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.HmacAlgorithms"   -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.digest.HmacAlgorithms"   -> "java.lang.Enum (java.base)";
   "org.apache.commons.codec.digest.HmacAlgorithms"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.HmacAlgorithms"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.HmacUtils"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Md5Crypt"         -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Md5Crypt"         -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MessageDigestAlgorithms" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MessageDigestAlgorithms" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2"      -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Byte (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.Short (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32 (classes)";
   "org.apache.commons.codec.digest.MurmurHash3"      -> "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86 (classes)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32" -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32" -> "org.apache.commons.codec.digest.MurmurHash3 (classes)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32" -> "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86 (classes)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86" -> "org.apache.commons.codec.digest.MurmurHash3 (classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32"    -> "java.util.zip.Checksum (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32C"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32C"   -> "java.util.zip.Checksum (java.base)";
   "org.apache.commons.codec.digest.Sha2Crypt"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Sha2Crypt"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.Sha2Crypt"        -> "java.util.regex.Pattern (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "java.util.concurrent.ThreadLocalRandom (java.base)";
   "org.apache.commons.codec.digest.UnixCrypt"        -> "org.apache.commons.codec.digest.B64 (classes)";
   "org.apache.commons.codec.digest.XXHash32"         -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.XXHash32"         -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.XXHash32"         -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.XXHash32"         -> "java.util.zip.Checksum (java.base)";
   "org.apache.commons.codec.language.AbstractCaverphone" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.AbstractCaverphone" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.AbstractCaverphone" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.AbstractCaverphone" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.AbstractCaverphone" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Caverphone"     -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.language.Caverphone"     -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.Caverphone"     -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Caverphone"     -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.Caverphone"     -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.Caverphone"     -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Caverphone"     -> "org.apache.commons.codec.language.Caverphone2 (classes)";
   "org.apache.commons.codec.language.Caverphone1"    -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.Caverphone1"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Caverphone1"    -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.Caverphone1"    -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.Caverphone1"    -> "org.apache.commons.codec.language.AbstractCaverphone (classes)";
   "org.apache.commons.codec.language.Caverphone2"    -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.Caverphone2"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Caverphone2"    -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.Caverphone2"    -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.Caverphone2"    -> "org.apache.commons.codec.language.AbstractCaverphone (classes)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer (classes)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer (classes)";
   "org.apache.commons.codec.language.ColognePhonetic" -> "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer (classes)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer" -> "org.apache.commons.codec.language.ColognePhonetic (classes)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer" -> "org.apache.commons.codec.language.ColognePhonetic (classes)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer" -> "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer (classes)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer" -> "org.apache.commons.codec.language.ColognePhonetic (classes)";
   "org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer" -> "org.apache.commons.codec.language.ColognePhonetic$CologneBuffer (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.HashMap (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Map$Entry (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Scanner (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.CharEncoding (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.Resources (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex$1 (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$1" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$1" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$1" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex$1 (classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex (classes)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.language.DoubleMetaphone" -> "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult (classes)";
   "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult" -> "org.apache.commons.codec.language.DoubleMetaphone (classes)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoder" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Metaphone"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.Metaphone"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Metaphone"      -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.Metaphone"      -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.Metaphone"      -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.Metaphone"      -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.Metaphone"      -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.util.regex.Matcher (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "java.util.regex.Pattern (java.base)";
   "org.apache.commons.codec.language.Nysiis"         -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.Nysiis"         -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Nysiis"         -> "org.apache.commons.codec.language.SoundexUtils (classes)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.RefinedSoundex" -> "org.apache.commons.codec.language.SoundexUtils (classes)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.Soundex"        -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.Soundex"        -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.Soundex"        -> "org.apache.commons.codec.language.SoundexUtils (classes)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.SoundexUtils"   -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "org.apache.commons.codec.language.bm.PhoneticEngine (classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoder" -> "org.apache.commons.codec.language.bm.RuleType (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.ArrayList (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.EnumMap (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Scanner (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "java.util.regex.Pattern (java.base)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.Resources (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.Lang$1 (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.Lang$LangRule (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.Lang"        -> "org.apache.commons.codec.language.bm.ResourceConstants (classes)";
   "org.apache.commons.codec.language.bm.Lang$1"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Lang$1"      -> "org.apache.commons.codec.language.bm.Lang (classes)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.util.regex.Matcher (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "java.util.regex.Pattern (java.base)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "org.apache.commons.codec.language.bm.Lang (classes)";
   "org.apache.commons.codec.language.bm.Lang$LangRule" -> "org.apache.commons.codec.language.bm.Lang$1 (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.EnumMap (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.Scanner (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.Resources (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.Languages$1 (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.Languages$AnyLanguage (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.Languages$NoLanguage (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.Languages"   -> "org.apache.commons.codec.language.bm.ResourceConstants (classes)";
   "org.apache.commons.codec.language.bm.Languages$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Languages$1" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Languages$AnyLanguage" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Languages$AnyLanguage" -> "java.util.NoSuchElementException (java.base)";
   "org.apache.commons.codec.language.bm.Languages$AnyLanguage" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Languages$AnyLanguage" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "org.apache.commons.codec.language.bm.Languages$1 (classes)";
   "org.apache.commons.codec.language.bm.Languages$LanguageSet" -> "org.apache.commons.codec.language.bm.Languages$SomeLanguages (classes)";
   "org.apache.commons.codec.language.bm.Languages$NoLanguage" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Languages$NoLanguage" -> "java.util.NoSuchElementException (java.base)";
   "org.apache.commons.codec.language.bm.Languages$NoLanguage" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Languages$NoLanguage" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "org.apache.commons.codec.language.bm.Languages$1 (classes)";
   "org.apache.commons.codec.language.bm.Languages$SomeLanguages" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.NameType"    -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.NameType"    -> "java.lang.Enum (java.base)";
   "org.apache.commons.codec.language.bm.NameType"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.NameType"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.EnumMap (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "java.util.TreeMap (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.Lang (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.PhoneticEngine$1 (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine" -> "org.apache.commons.codec.language.bm.RuleType (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$1" -> "java.lang.NoSuchFieldError (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$1" -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$1" -> "org.apache.commons.codec.language.bm.PhoneticEngine (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.PhoneticEngine (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder" -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "java.util.Objects (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "org.apache.commons.codec.language.bm.PhoneticEngine (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication" -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.ResourceConstants" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.ResourceConstants" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.ResourceConstants" -> "org.apache.commons.codec.CharEncoding (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.ArrayList (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.EnumMap (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.HashMap (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Scanner (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.Resources (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.NameType (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.ResourceConstants (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$1 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$2 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$3 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$4 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$5 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$6 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$7 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$8 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$9 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$PhonemeList (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.Rule1 (classes)";
   "org.apache.commons.codec.language.bm.Rule"        -> "org.apache.commons.codec.language.bm.RuleType (classes)";
   "org.apache.commons.codec.language.bm.Rule$1"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$1"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$1"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$1"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$2"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$2"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$2"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$2"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$2"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$3"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$3"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$3"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$3"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$3"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$4"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$4"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$4"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$4"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$4"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$5"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$5"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$5"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$5"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$5"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$6"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$6"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$6"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$6"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$6"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$7"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$7"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$7"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$7"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$7"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$8"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$8"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$8"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$8"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$8"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "java.util.regex.Matcher (java.base)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "java.util.regex.Pattern (java.base)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$9"      -> "org.apache.commons.codec.language.bm.Rule$RPattern (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "org.apache.commons.codec.language.bm.Languages (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "org.apache.commons.codec.language.bm.Rule$Phoneme$1 (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme" -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme$1" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme$1" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme$1" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$Phoneme$1" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeExpr" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeExpr" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeExpr" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeExpr" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (classes)";
   "org.apache.commons.codec.language.bm.Rule$PhonemeList" -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.Rule$RPattern" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.Rule$RPattern" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.Rule$RPattern" -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule1"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.Rule1"       -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.Rule1"       -> "org.apache.commons.codec.language.bm.Rule (classes)";
   "org.apache.commons.codec.language.bm.Rule1"       -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (classes)";
   "org.apache.commons.codec.language.bm.RuleType"    -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.language.bm.RuleType"    -> "java.lang.Enum (java.base)";
   "org.apache.commons.codec.language.bm.RuleType"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.RuleType"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.CodecPolicy (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.StringDecoder (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.binary.Base64 (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.binary.BaseNCodec (classes)";
   "org.apache.commons.codec.net.BCodec"              -> "org.apache.commons.codec.net.RFC1522Codec (classes)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.ArrayIndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.PercentCodec"        -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.net.PercentCodec"        -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.net.PercentCodec"        -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.PercentCodec"        -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.PercentCodec"        -> "org.apache.commons.codec.net.Utils (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.StringDecoder (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.net.QuotedPrintableCodec (classes)";
   "org.apache.commons.codec.net.QCodec"              -> "org.apache.commons.codec.net.RFC1522Codec (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.ArrayIndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.nio.charset.IllegalCharsetNameException (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.nio.charset.UnsupportedCharsetException (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.StringDecoder (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.net.QuotedPrintableCodec" -> "org.apache.commons.codec.net.Utils (classes)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.RFC1522Codec"        -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.ArrayIndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.Deprecated (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.BinaryDecoder (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.BinaryEncoder (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.CharEncoding (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.DecoderException (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.EncoderException (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.StringDecoder (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.StringEncoder (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.binary.StringUtils (classes)";
   "org.apache.commons.codec.net.URLCodec"            -> "org.apache.commons.codec.net.Utils (classes)";
   "org.apache.commons.codec.net.Utils"               -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.net.Utils"               -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.Utils"               -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.Utils"               -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.Utils"               -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.Utils"               -> "org.apache.commons.codec.DecoderException (classes)";
}
