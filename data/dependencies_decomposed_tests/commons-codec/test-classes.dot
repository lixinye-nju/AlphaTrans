digraph "test-classes" {
    // Path: java_projects/cleaned_final_projects_decomposed_tests/commons-codec/target/test-classes
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "org.apache.commons.codec.BinaryEncoder (not found)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.BinaryEncoderAbstractTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.CharEncodingTest"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.CharEncodingTest"        -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.CharEncodingTest"        -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.CharEncodingTest"        -> "org.junit.Test (not found)";
   "org.apache.commons.codec.CharsetsTest"            -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.CharsetsTest"            -> "java.lang.String (java.base)";
   "org.apache.commons.codec.CharsetsTest"            -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.CharsetsTest"            -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.CharsetsTest"            -> "org.apache.commons.codec.Charsets (not found)";
   "org.apache.commons.codec.CharsetsTest"            -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.CharsetsTest"            -> "org.junit.Test (not found)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.DecoderExceptionTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.EncoderExceptionTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.Float (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "org.apache.commons.codec.Encoder (not found)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.StringEncoderAbstractTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.util.Collections (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.apache.commons.codec.StringEncoderComparator (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.apache.commons.codec.language.DoubleMetaphone (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.apache.commons.codec.language.Soundex (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.StringEncoderComparatorTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.AllocateDirectHexTest" -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.binary.AllocateDirectHexTest" -> "org.apache.commons.codec.binary.HexTest (test-classes)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.io.ByteArrayInputStream (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "org.apache.commons.codec.binary.Base16InputStream (not found)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base16InputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.apache.commons.codec.binary.Base16 (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.apache.commons.codec.binary.Base16OutputStream (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base16OutputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "java.util.Random (java.base)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.Base16 (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.Base16TestData (test-classes)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base16Test"       -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base16TestData"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base16TestData"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.io.ByteArrayInputStream (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.Base32InputStream (not found)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.Base32TestData (test-classes)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodecInputStream (not found)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.Codec105ErrorInputStream (test-classes)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base32InputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.Base32 (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.Base32OutputStream (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.Base32Test (test-classes)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.Base32TestData (test-classes)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodecOutputStream (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base32OutputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.Error (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.binary.Base32 (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.apache.commons.codec.binary.Hex (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base32Test"       -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base32TestData"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base32TestData"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.BinaryDecoder (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.BinaryEncoder (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.Decoder (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.Encoder (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.apache.commons.codec.binary.Base64 (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base64Codec13Test" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.BufferedReader (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.ByteArrayInputStream (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.InputStreamReader (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.io.Reader (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.Base64InputStream (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.Base64TestData (test-classes)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodecInputStream (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.Codec105ErrorInputStream (test-classes)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base64InputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.Base64 (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.Base64OutputStream (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.Base64Test (test-classes)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.Base64TestData (test-classes)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNCodecOutputStream (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base64OutputStreamTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Byte (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Math (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.math.BigInteger (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "java.util.Random (java.base)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.Base64 (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.Base64TestData (test-classes)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.BaseNCodecTest (test-classes)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.BaseNTestData (test-classes)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.Hex (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.junit.Assume (not found)";
   "org.apache.commons.codec.binary.Base64Test"       -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.Base64TestData"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.Base64TestData"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.OutOfMemoryError (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.Runtime (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodecTest$1 (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodecTest$2 (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodecTest$3 (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.apache.commons.codec.binary.BaseNCodecTest$NoOpBaseNCodec (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.junit.Assume (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.junit.Before (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest"   -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$1" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$1" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$1" -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$1" -> "org.apache.commons.codec.binary.BaseNCodecTest (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest$2" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$2" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$2" -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$2" -> "org.apache.commons.codec.binary.BaseNCodecTest (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest$3" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$3" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$3" -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$3" -> "org.apache.commons.codec.binary.BaseNCodecTest (test-classes)";
   "org.apache.commons.codec.binary.BaseNCodecTest$NoOpBaseNCodec" -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$NoOpBaseNCodec" -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$NoOpBaseNCodec" -> "org.apache.commons.codec.binary.BaseNCodec$Context (not found)";
   "org.apache.commons.codec.binary.BaseNCodecTest$NoOpBaseNCodec" -> "org.apache.commons.codec.binary.BaseNCodecTest (test-classes)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.lang.System (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "java.util.Random (java.base)";
   "org.apache.commons.codec.binary.BaseNTestData"    -> "org.apache.commons.codec.binary.BaseNCodec (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.apache.commons.codec.binary.BinaryCodec (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.junit.After (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.junit.Before (not found)";
   "org.apache.commons.codec.binary.BinaryCodecTest"  -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtils (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$1 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$2 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$3 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$1" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$1" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$1" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$1" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "org.apache.commons.codec.binary.CharSequenceUtils (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$1 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$2" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "org.apache.commons.codec.binary.CharSequenceUtils (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$1 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$3" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.Boolean (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$1 (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData (test-classes)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$RunTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.CharSequenceUtilsTest$TestData" -> "org.apache.commons.codec.binary.CharSequenceUtilsTest (test-classes)";
   "org.apache.commons.codec.binary.Codec105ErrorInputStream" -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.binary.Codec105ErrorInputStream" -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.lang.UnsupportedOperationException (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.util.Set (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.util.SortedMap (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "java.util.concurrent.ThreadLocalRandom (java.base)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.apache.commons.codec.binary.Hex (not found)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.HexTest"          -> "org.junit.Test (not found)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.String (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.binary.StringUtilsTest"  -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.B64Test"          -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.B64Test"          -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.B64Test"          -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.B64Test"          -> "org.apache.commons.codec.digest.B64 (not found)";
   "org.apache.commons.codec.digest.B64Test"          -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.B64Test"          -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "org.apache.commons.codec.digest.Blake3 (not found)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.Blake3Test"       -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.apache.commons.codec.binary.Hex (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.apache.commons.codec.digest.Blake3 (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.junit.runner.RunWith (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.junit.runners.Parameterized (not found)";
   "org.apache.commons.codec.digest.Blake3TestVectorsTest" -> "org.junit.runners.Parameterized$Parameters (not found)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "org.apache.commons.codec.digest.MurmurHash2 (not found)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.MurmurHash2Test"  -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.OutOfMemoryError (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.nio.ByteBuffer (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "java.util.concurrent.ThreadLocalRandom (java.base)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.apache.commons.codec.binary.StringUtils (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.apache.commons.codec.digest.MurmurHash3 (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32 (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86 (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.junit.Assume (not found)";
   "org.apache.commons.codec.digest.MurmurHash3Test"  -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "org.apache.commons.codec.digest.PureJavaCrc32C (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32CTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.util.Random (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "java.util.zip.CRC32 (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "org.apache.commons.codec.digest.PureJavaCrc32 (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$Table (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.AssertionError (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.RuntimeException (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.Thread (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.lang.reflect.Constructor (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.Properties (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.Random (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.zip.CRC32 (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "java.util.zip.Checksum (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "org.apache.commons.codec.digest.PureJavaCrc32 (not found)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "org.apache.commons.codec.digest.PureJavaCrc32Test (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1 (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$BenchResult (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.IllegalAccessException (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.InstantiationException (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.Thread (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.reflect.Constructor (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.lang.reflect.InvocationTargetException (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "java.util.zip.Checksum (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "org.apache.commons.codec.digest.PureJavaCrc32Test (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$1" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$BenchResult (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$BenchResult" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$BenchResult" -> "org.apache.commons.codec.digest.PureJavaCrc32Test (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest$BenchResult" -> "org.apache.commons.codec.digest.PureJavaCrc32Test$PerformanceTest (test-classes)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.io.FileNotFoundException (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.io.FileOutputStream (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.digest.PureJavaCrc32Test$Table" -> "org.apache.commons.codec.digest.PureJavaCrc32Test (test-classes)";
   "org.apache.commons.codec.digest.Sha2CryptTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.Sha2CryptTest"    -> "org.apache.commons.codec.digest.Sha2Crypt (not found)";
   "org.apache.commons.codec.digest.Sha2CryptTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.Sha2CryptTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "java.lang.OutOfMemoryError (java.base)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "org.apache.commons.codec.digest.XXHash32 (not found)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "org.junit.Assume (not found)";
   "org.apache.commons.codec.digest.XXHash32OverflowTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.ByteArrayOutputStream (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.File (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.FileInputStream (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.FileNotFoundException (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.IOException (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.InputStream (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.io.OutputStream (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.ClassLoader (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.String (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.net.URI (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.net.URISyntaxException (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.net.URL (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "java.util.List (java.base)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.apache.commons.codec.digest.XXHash32 (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.junit.Test (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.junit.runner.RunWith (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.junit.runners.Parameterized (not found)";
   "org.apache.commons.codec.digest.XXHash32Test"     -> "org.junit.runners.Parameterized$Parameters (not found)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.apache.commons.codec.language.Caverphone1 (not found)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.Caverphone1Test" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.apache.commons.codec.language.Caverphone2 (not found)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.Caverphone2Test" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.util.Iterator (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.util.Locale (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.apache.commons.codec.language.ColognePhonetic (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.junit.AfterClass (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.ColognePhoneticTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.apache.commons.codec.language.DaitchMokotoffSoundex (not found)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.DaitchMokotoffSoundexTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "org.apache.commons.codec.language.DoubleMetaphone (not found)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.DoubleMetaphone2Test" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.apache.commons.codec.language.DoubleMetaphone (not found)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.DoubleMetaphoneTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "org.apache.commons.codec.language.MatchRatingApproachEncoder (not found)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.MatchRatingApproachEncoderTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "org.apache.commons.codec.language.Metaphone (not found)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.MetaphoneTest"  -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.NysiisTest"     -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.NysiisTest"     -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.NysiisTest"     -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.apache.commons.codec.language.Nysiis (not found)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.NysiisTest"     -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.apache.commons.codec.language.RefinedSoundex (not found)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.RefinedSoundexTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.SoundexTest"    -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.codec.language.SoundexTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.SoundexTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.apache.commons.codec.language.Soundex (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.apache.commons.codec.language.SoundexUtils (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.SoundexTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.lang.Character (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.StringEncoder (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.StringEncoderAbstractTest (test-classes)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.BeiderMorseEncoder (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Lang (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Languages (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.NameType (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Rule (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Rule$Phoneme (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.Rule$PhonemeExpr (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.apache.commons.codec.language.bm.RuleType (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest$1 (test-classes)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest$1" -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest$1" -> "org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest (test-classes)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.apache.commons.codec.language.bm.Lang (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.apache.commons.codec.language.bm.Languages (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.apache.commons.codec.language.bm.NameType (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.junit.runner.RunWith (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.junit.runners.Parameterized (not found)";
   "org.apache.commons.codec.language.bm.LanguageGuessingTest" -> "org.junit.runners.Parameterized$Parameters (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.lang.Long (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "org.apache.commons.codec.language.bm.NameType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "org.apache.commons.codec.language.bm.PhoneticEngine (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "org.apache.commons.codec.language.bm.RuleType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.Collection (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.HashSet (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.Map (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.Set (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "java.util.TreeMap (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.apache.commons.codec.language.bm.Languages (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.apache.commons.codec.language.bm.NameType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.apache.commons.codec.language.bm.PhoneticEngine (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.apache.commons.codec.language.bm.RuleType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.lang.Boolean (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.lang.Integer (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "java.util.List (java.base)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.apache.commons.codec.language.bm.NameType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.apache.commons.codec.language.bm.PhoneticEngine (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.apache.commons.codec.language.bm.RuleType (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.junit.runner.RunWith (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.junit.runners.Parameterized (not found)";
   "org.apache.commons.codec.language.bm.PhoneticEngineTest" -> "org.junit.runners.Parameterized$Parameters (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.io.PrintStream (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.lang.CharSequence (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.lang.System (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "java.util.Comparator (java.base)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.apache.commons.codec.language.bm.Languages (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.apache.commons.codec.language.bm.Languages$LanguageSet (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.apache.commons.codec.language.bm.Rule (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.apache.commons.codec.language.bm.Rule$Phoneme (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.language.bm.RuleTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.apache.commons.codec.CodecPolicy (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.apache.commons.codec.net.BCodec (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.BCodecTest"          -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.ArrayIndexOutOfBoundsException (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.Class (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.lang.Throwable (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "java.util.Arrays (java.base)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "org.apache.commons.codec.net.PercentCodec (not found)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "org.junit.Ignore (not found)";
   "org.apache.commons.codec.net.PercentCodecTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.net.QCodecTest"          -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.QCodecTest"          -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.QCodecTest"          -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.QCodecTest"          -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.apache.commons.codec.net.QCodec (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.QCodecTest"          -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.apache.commons.codec.net.QuotedPrintableCodec (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.QuotedPrintableCodecTest" -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "org.apache.commons.codec.net.RFC1522CodecTest$RFC1522TestCodec (test-classes)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest"    -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest$RFC1522TestCodec" -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.RFC1522CodecTest$RFC1522TestCodec" -> "org.apache.commons.codec.net.RFC1522Codec (not found)";
   "org.apache.commons.codec.net.RFC1522CodecTest$RFC1522TestCodec" -> "org.apache.commons.codec.net.RFC1522CodecTest (test-classes)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.io.UnsupportedEncodingException (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.lang.Double (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.lang.Exception (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.lang.String (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.nio.charset.Charset (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.nio.charset.StandardCharsets (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "java.util.BitSet (java.base)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.apache.commons.codec.CharEncoding (not found)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.apache.commons.codec.DecoderException (not found)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.apache.commons.codec.EncoderException (not found)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.apache.commons.codec.net.URLCodec (not found)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.junit.Assert (not found)";
   "org.apache.commons.codec.net.URLCodecTest"        -> "org.junit.Test (not found)";
   "org.apache.commons.codec.net.UtilsTest"           -> "java.lang.Object (java.base)";
   "org.apache.commons.codec.net.UtilsTest"           -> "org.apache.commons.codec.net.Utils (not found)";
   "org.apache.commons.codec.net.UtilsTest"           -> "org.junit.Test (not found)";
}
