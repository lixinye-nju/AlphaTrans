digraph "classes" {
    // Path: java_projects/cleaned_final_projects_decomposed_tests/commons-graph/target/classes
   "org.apache.commons.graph.CommonsGraph"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.CommonsGraph"            -> "java.lang.String (java.base)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.SynchronizedDirectedGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.SynchronizedGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.SynchronizedMutableGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.SynchronizedUndirectedGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.builder.GraphConnection (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.builder.LinkedConnectionBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.coloring.ColorsBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.coloring.DefaultColorsBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.connectivity.ConnectivityBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.elo.DefaultRankingSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.elo.GameResult (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.elo.RankingSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.export.DefaultExportSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.export.NamedExportSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.flow.FlowWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.model.DirectedMutableGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.model.UndirectedMutableGraph (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.scc.SccAlgorithmSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.visit.DefaultVisitSourceSelector (classes)";
   "org.apache.commons.graph.CommonsGraph"            -> "org.apache.commons.graph.visit.VisitSourceSelector (classes)";
   "org.apache.commons.graph.DirectedGraph"           -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.DirectedGraph"           -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.DirectedGraph"           -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.Graph"                   -> "java.io.Serializable (java.base)";
   "org.apache.commons.graph.Graph"                   -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.Graph"                   -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.Graph"                   -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.GraphException"          -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.GraphException"          -> "java.lang.RuntimeException (java.base)";
   "org.apache.commons.graph.GraphException"          -> "java.lang.String (java.base)";
   "org.apache.commons.graph.GraphException"          -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.Mapper"                  -> "java.io.Serializable (java.base)";
   "org.apache.commons.graph.Mapper"                  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.MutableGraph"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.MutableGraph"            -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.Path"                    -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.Path"                    -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.SpanningTree"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.SpanningTree"            -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.SpanningTree"            -> "org.apache.commons.graph.Weighted (classes)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.SynchronizedDirectedGraph" -> "org.apache.commons.graph.SynchronizedGraph (classes)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "java.lang.String (java.base)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.SynchronizedGraph"       -> "org.apache.commons.graph.utils.Objects (classes)";
   "org.apache.commons.graph.SynchronizedMutableGraph" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.SynchronizedMutableGraph" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.SynchronizedMutableGraph" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.SynchronizedMutableGraph" -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.SynchronizedMutableGraph" -> "org.apache.commons.graph.SynchronizedGraph (classes)";
   "org.apache.commons.graph.SynchronizedUndirectedGraph" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.SynchronizedUndirectedGraph" -> "org.apache.commons.graph.SynchronizedGraph (classes)";
   "org.apache.commons.graph.SynchronizedUndirectedGraph" -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.UndirectedGraph"         -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.UndirectedGraph"         -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.VertexPair"              -> "java.io.Serializable (java.base)";
   "org.apache.commons.graph.VertexPair"              -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.VertexPair"              -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.VertexPair"              -> "java.lang.String (java.base)";
   "org.apache.commons.graph.VertexPair"              -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.VertexPair"              -> "org.apache.commons.graph.utils.Objects (classes)";
   "org.apache.commons.graph.Weighted"                -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.WeightedPath"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.WeightedPath"            -> "org.apache.commons.graph.Path (classes)";
   "org.apache.commons.graph.WeightedPath"            -> "org.apache.commons.graph.Weighted (classes)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "org.apache.commons.graph.builder.GraphConnection (classes)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "org.apache.commons.graph.builder.GraphConnector (classes)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "org.apache.commons.graph.builder.HeadVertexConnector (classes)";
   "org.apache.commons.graph.builder.AbstractGraphConnection" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "java.lang.String (java.base)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "org.apache.commons.graph.builder.DefaultHeadVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "org.apache.commons.graph.builder.GraphConnector (classes)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "org.apache.commons.graph.builder.HeadVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultGrapher"  -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "org.apache.commons.graph.builder.DefaultTailVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "org.apache.commons.graph.builder.HeadVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "org.apache.commons.graph.builder.TailVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultHeadVertexConnector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.builder.DefaultGrapher (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.builder.GraphConnection (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.builder.GraphConnector (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.builder.LinkedConnectionBuilder (classes)";
   "org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.builder.DefaultTailVertexConnector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.DefaultTailVertexConnector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.builder.DefaultTailVertexConnector" -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.builder.DefaultTailVertexConnector" -> "org.apache.commons.graph.builder.TailVertexConnector (classes)";
   "org.apache.commons.graph.builder.DefaultTailVertexConnector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.builder.GraphConnection" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.GraphConnection" -> "org.apache.commons.graph.builder.GraphConnector (classes)";
   "org.apache.commons.graph.builder.GraphConnector"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.GraphConnector"  -> "org.apache.commons.graph.builder.HeadVertexConnector (classes)";
   "org.apache.commons.graph.builder.HeadVertexConnector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.HeadVertexConnector" -> "org.apache.commons.graph.builder.TailVertexConnector (classes)";
   "org.apache.commons.graph.builder.LinkedConnectionBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.LinkedConnectionBuilder" -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.builder.LinkedConnectionBuilder" -> "org.apache.commons.graph.builder.GraphConnection (classes)";
   "org.apache.commons.graph.builder.TailVertexConnector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.builder.package-info"    -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.collections.DisjointSet" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.collections.DisjointSet" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.collections.DisjointSet" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.collections.DisjointSet" -> "org.apache.commons.graph.collections.DisjointSetNode (classes)";
   "org.apache.commons.graph.collections.DisjointSetNode" -> "java.lang.Comparable (java.base)";
   "org.apache.commons.graph.collections.DisjointSetNode" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.collections.DisjointSetNode" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.Comparable (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.Math (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.StringBuilder (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.List (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.NoSuchElementException (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Queue (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "java.util.Stack (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "org.apache.commons.graph.collections.FibonacciHeapNode (classes)";
   "org.apache.commons.graph.collections.FibonacciHeap" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.collections.FibonacciHeapNode" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.collections.FibonacciHeapNode" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.collections.package-info" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.util.List (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.coloring.ColoredVertices" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.coloring.ColoringAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.ColoringAlgorithmsSelector" -> "org.apache.commons.graph.coloring.ColoredVertices (classes)";
   "org.apache.commons.graph.coloring.ColorsBuilder"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.ColorsBuilder"  -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.ColorsBuilder"  -> "org.apache.commons.graph.coloring.ColoringAlgorithmsSelector (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.util.List (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.coloring.ColoredVertices (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.coloring.ColoringAlgorithmsSelector (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.coloring.NotEnoughColorsException (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.coloring.UncoloredOrderedVertices (classes)";
   "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "org.apache.commons.graph.coloring.ColoringAlgorithmsSelector (classes)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "org.apache.commons.graph.coloring.ColorsBuilder (classes)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector (classes)";
   "org.apache.commons.graph.coloring.DefaultColorsBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.coloring.NotEnoughColorsException" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.NotEnoughColorsException" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.coloring.NotEnoughColorsException" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.coloring.NotEnoughColorsException" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.NotEnoughColorsException" -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "java.util.TreeMap (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices" -> "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1 (classes)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.util.NoSuchElementException (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.coloring.UncoloredOrderedVertices$1" -> "org.apache.commons.graph.coloring.UncoloredOrderedVertices (classes)";
   "org.apache.commons.graph.coloring.package-info"   -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "java.util.List (java.base)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "org.apache.commons.graph.visit.BaseGraphVisitHandler (classes)";
   "org.apache.commons.graph.connectivity.ConnectedComponentHandler" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector" -> "java.util.List (java.base)";
   "org.apache.commons.graph.connectivity.ConnectivityBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.ConnectivityBuilder" -> "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "java.util.List (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.CommonsGraph (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.connectivity.ConnectedComponentHandler (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.visit.GraphVisitHandler (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.visit.VisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector" -> "org.apache.commons.graph.visit.VisitSourceSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "java.util.Arrays (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "java.util.List (java.base)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "org.apache.commons.graph.connectivity.ConnectivityAlgorithmsSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "org.apache.commons.graph.connectivity.ConnectivityBuilder (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "org.apache.commons.graph.connectivity.DefaultConnectivityAlgorithmsSelector (classes)";
   "org.apache.commons.graph.connectivity.DefaultConnectivityBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.connectivity.package-info" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.Category"            -> "java.lang.Double (java.base)";
   "org.apache.commons.graph.elo.Category"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.Double (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.Math (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "org.apache.commons.graph.elo.DefaultKFactorBuilder$1 (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "org.apache.commons.graph.elo.GameResult (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "org.apache.commons.graph.elo.KFactorBuilder (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder" -> "org.apache.commons.graph.elo.PlayersRank (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder$1" -> "java.lang.NoSuchFieldError (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder$1" -> "org.apache.commons.graph.elo.DefaultKFactorBuilder (classes)";
   "org.apache.commons.graph.elo.DefaultKFactorBuilder$1" -> "org.apache.commons.graph.elo.GameResult (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.elo.DefaultKFactorBuilder (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.elo.GameResult (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.elo.KFactorBuilder (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.elo.PlayersRank (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.elo.RankingSelector (classes)";
   "org.apache.commons.graph.elo.DefaultRankingSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.elo.GameResult"          -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.elo.GameResult"          -> "java.lang.Enum (java.base)";
   "org.apache.commons.graph.elo.GameResult"          -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.GameResult"          -> "java.lang.String (java.base)";
   "org.apache.commons.graph.elo.KFactorBuilder"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.PlayersRank"         -> "java.lang.Double (java.base)";
   "org.apache.commons.graph.elo.PlayersRank"         -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.RankingSelector"     -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.elo.RankingSelector"     -> "org.apache.commons.graph.elo.KFactorBuilder (classes)";
   "org.apache.commons.graph.elo.RankingSelector"     -> "org.apache.commons.graph.elo.PlayersRank (classes)";
   "org.apache.commons.graph.elo.package-info"        -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.File (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.FileNotFoundException (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.FileOutputStream (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.IOException (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.OutputStream (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.OutputStreamWriter (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.io.Writer (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.Exception (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.RuntimeException (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.Date (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.Map$Entry (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.export.AbstractExporter" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.export.AbstractExporter" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.export.AbstractExporter" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.export.AbstractExporter" -> "org.apache.commons.graph.export.GraphExportException (classes)";
   "org.apache.commons.graph.export.AbstractExporter" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "org.apache.commons.graph.export.DotExporter (classes)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "org.apache.commons.graph.export.ExportSelector (classes)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "org.apache.commons.graph.export.NamedExportSelector (classes)";
   "org.apache.commons.graph.export.DefaultExportSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.io.PrintWriter (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.io.Writer (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Exception (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Number (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.lang.String (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.util.Map (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.util.Map$Entry (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "java.util.Set (java.base)";
   "org.apache.commons.graph.export.DotExporter"      -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.export.DotExporter"      -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.export.DotExporter"      -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.export.DotExporter"      -> "org.apache.commons.graph.export.AbstractExporter (classes)";
   "org.apache.commons.graph.export.ExportSelector"   -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.ExportSelector"   -> "org.apache.commons.graph.export.DotExporter (classes)";
   "org.apache.commons.graph.export.ExportSelector"   -> "org.apache.commons.graph.export.GraphExportException (classes)";
   "org.apache.commons.graph.export.GraphExportException" -> "java.lang.Exception (java.base)";
   "org.apache.commons.graph.export.GraphExportException" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.GraphExportException" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.export.GraphExportException" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.export.NamedExportSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.export.NamedExportSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.export.NamedExportSelector" -> "org.apache.commons.graph.export.ExportSelector (classes)";
   "org.apache.commons.graph.export.package-info"     -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.flow.DefaultFromHeadBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.flow.FlowWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.flow.FromHeadBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.flow.DefaultToTailBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.flow.FromHeadBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.flow.ToTailBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultFromHeadBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.CommonsGraph (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.builder.GraphConnection (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1 (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$EdgeWrapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.flow.FlowNetworkHandler (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.flow.MaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.model.DirectedMutableGraph (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.visit.GraphVisitHandler (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.visit.VisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.visit.VisitSourceSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.builder.AbstractGraphConnection (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.builder.HeadVertexConnector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.builder.TailVertexConnector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$EdgeWrapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$1" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$EdgeWrapper" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$EdgeWrapper" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$EdgeWrapper (classes)";
   "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector$MapperWrapper" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.flow.DefaultMaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.flow.MaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.flow.ToTailBuilder (classes)";
   "org.apache.commons.graph.flow.DefaultToTailBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.shortestpath.PredecessorsList (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.visit.BaseGraphVisitHandler (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.flow.FlowNetworkHandler" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.flow.FlowWeightedEdgesBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.FlowWeightedEdgesBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.flow.FlowWeightedEdgesBuilder" -> "org.apache.commons.graph.flow.FromHeadBuilder (classes)";
   "org.apache.commons.graph.flow.FromHeadBuilder"    -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.FromHeadBuilder"    -> "org.apache.commons.graph.flow.ToTailBuilder (classes)";
   "org.apache.commons.graph.flow.MaxFlowAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.MaxFlowAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.flow.ToTailBuilder"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.flow.ToTailBuilder"      -> "org.apache.commons.graph.flow.MaxFlowAlgorithmSelector (classes)";
   "org.apache.commons.graph.flow.package-info"       -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.lang.String (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.Collections (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.Map (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "java.util.Set (java.base)";
   "org.apache.commons.graph.model.BaseGraph"         -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.model.BaseGraph"         -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.model.BaseGraph"         -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.BaseGraph"         -> "org.apache.commons.graph.utils.Objects (classes)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.lang.String (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.util.Map (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "java.util.Set (java.base)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "org.apache.commons.graph.MutableGraph (classes)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.BaseMutableGraph"  -> "org.apache.commons.graph.model.BaseGraph (classes)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.DirectedMutableGraph" -> "org.apache.commons.graph.model.BaseMutableGraph (classes)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.lang.String (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.Arrays (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.Collections (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.List (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "java.util.Map (java.base)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "org.apache.commons.graph.Path (classes)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.model.InMemoryPath"      -> "org.apache.commons.graph.utils.Objects (classes)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "org.apache.commons.graph.model.InMemoryPath (classes)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "org.apache.commons.graph.utils.Objects (classes)";
   "org.apache.commons.graph.model.InMemoryWeightedPath" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.model.MutableSpanningTree" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.MutableSpanningTree" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.model.MutableSpanningTree" -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.model.MutableSpanningTree" -> "org.apache.commons.graph.model.UndirectedMutableGraph (classes)";
   "org.apache.commons.graph.model.MutableSpanningTree" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "java.lang.String (java.base)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.RevertedGraph"     -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.model.UndirectedMutableGraph" -> "org.apache.commons.graph.model.BaseMutableGraph (classes)";
   "org.apache.commons.graph.model.package-info"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.package-info"            -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.List (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "java.util.Stack (java.base)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm" -> "org.apache.commons.graph.scc.SccAlgorithm (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.scc.CheriyanMehlhornGabowAlgorithm (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.scc.KosarajuSharirAlgorithm (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.scc.SccAlgorithm (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.scc.SccAlgorithmSelector (classes)";
   "org.apache.commons.graph.scc.DefaultSccAlgorithmSelector" -> "org.apache.commons.graph.scc.TarjanAlgorithm (classes)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.List (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "org.apache.commons.graph.model.RevertedGraph (classes)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "org.apache.commons.graph.scc.SccAlgorithm (classes)";
   "org.apache.commons.graph.scc.KosarajuSharirAlgorithm" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.scc.SccAlgorithm"        -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.SccAlgorithm"        -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.SccAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.SccAlgorithmSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.lang.Math (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.LinkedHashSet (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.Map (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.Set (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "java.util.Stack (java.base)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "org.apache.commons.graph.scc.SccAlgorithm (classes)";
   "org.apache.commons.graph.scc.TarjanAlgorithm"     -> "org.apache.commons.graph.scc.TarjanVertexMetaInfo (classes)";
   "org.apache.commons.graph.scc.TarjanVertexMetaInfo" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.scc.package-info"        -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.util.Queue (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.collections.FibonacciHeap (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.shortestpath.Heuristic (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.shortestpath.HeuristicBuilder (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.shortestpath.PredecessorsList (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.shortestpath.ShortestDistances (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.UndirectedGraph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.shortestpath.PathSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.shortestpath.PredecessorsList (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.shortestpath.TargetSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.util.Queue (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.collections.FibonacciHeap (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.DefaultHeuristicBuilder (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.HeuristicBuilder (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.PredecessorsList (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.ShortestDistances (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.DefaultShortestPathAlgorithmSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.NegativeWeightedCycleException (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.PredecessorsList (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.ShortestDistances (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.shortestpath.TargetSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultTargetSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.shortestpath.DefaultPathSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.shortestpath.PathSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.shortestpath.Heuristic"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.HeuristicBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.HeuristicBuilder" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.HeuristicBuilder" -> "org.apache.commons.graph.shortestpath.Heuristic (classes)";
   "org.apache.commons.graph.shortestpath.NegativeWeightedCycleException" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.NegativeWeightedCycleException" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.NegativeWeightedCycleException" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.shortestpath.NegativeWeightedCycleException" -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.shortestpath.PathNotFoundException" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.PathNotFoundException" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.PathNotFoundException" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.shortestpath.PathNotFoundException" -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.shortestpath.PathSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.PathSourceSelector" -> "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath (classes)";
   "org.apache.commons.graph.shortestpath.PathSourceSelector" -> "org.apache.commons.graph.shortestpath.TargetSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.PathSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder" -> "org.apache.commons.graph.shortestpath.PathSourceSelector (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.model.InMemoryWeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.shortestpath.PredecessorsList" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.shortestpath.ShortestDistances" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.ShortestDistances" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.shortestpath.ShortestDistances" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.shortestpath.ShortestDistances" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.shortestpath.ShortestDistances" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector" -> "org.apache.commons.graph.shortestpath.HeuristicBuilder (classes)";
   "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.TargetSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.shortestpath.TargetSourceSelector" -> "org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath (classes)";
   "org.apache.commons.graph.shortestpath.TargetSourceSelector" -> "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector (classes)";
   "org.apache.commons.graph.shortestpath.TargetSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.shortestpath.package-info" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.List (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.Map (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.Queue (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.collections.DisjointSet (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.collections.FibonacciHeap (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.model.MutableSpanningTree (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.spanning.ShortestEdges (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.spanning.SuperVertex (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.spanning.WeightedEdgesComparator (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.Collections (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.List (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.PriorityQueue (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "java.util.Queue (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.CommonsGraph (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.WeightedPath (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.model.MutableSpanningTree (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.shortestpath.PathNotFoundException (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.shortestpath.PathSourceSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.shortestpath.TargetSourceSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.DefaultSpanningTreeAlgorithmSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.ReverseDeleteGraph (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.SpanningTreeSourceSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.WeightedEdgesComparator (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.spanning.SpanningTreeSourceSelector (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder (classes)";
   "org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.lang.Throwable (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.util.ArrayList (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "java.util.List (java.base)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.spanning.ReverseDeleteGraph" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.lang.String (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.util.Collection (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.util.HashMap (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "java.util.Map (java.base)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.GraphException (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.model.MutableSpanningTree (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.spanning.ShortestEdges"  -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.spanning.SpanningTreeSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.SpanningTreeSourceSelector" -> "org.apache.commons.graph.SpanningTree (classes)";
   "org.apache.commons.graph.spanning.SpanningTreeSourceSelector" -> "org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector (classes)";
   "org.apache.commons.graph.spanning.SpanningTreeSourceSelector" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder" -> "org.apache.commons.graph.spanning.SpanningTreeSourceSelector (classes)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.util.Set (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "java.util.TreeSet (java.base)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.spanning.SuperVertex"    -> "org.apache.commons.graph.spanning.WeightedEdgesComparator (classes)";
   "org.apache.commons.graph.spanning.WeightedEdgesComparator" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.spanning.WeightedEdgesComparator" -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.spanning.WeightedEdgesComparator" -> "org.apache.commons.graph.Mapper (classes)";
   "org.apache.commons.graph.spanning.package-info"   -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.utils.Assertions"        -> "java.lang.IllegalArgumentException (java.base)";
   "org.apache.commons.graph.utils.Assertions"        -> "java.lang.IllegalStateException (java.base)";
   "org.apache.commons.graph.utils.Assertions"        -> "java.lang.NullPointerException (java.base)";
   "org.apache.commons.graph.utils.Assertions"        -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.utils.Assertions"        -> "java.lang.String (java.base)";
   "org.apache.commons.graph.utils.Objects"           -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.utils.package-info"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.BaseGraphVisitHandler" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.BaseGraphVisitHandler" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.BaseGraphVisitHandler" -> "org.apache.commons.graph.visit.GraphVisitHandler (classes)";
   "org.apache.commons.graph.visit.BaseGraphVisitHandler" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.util.HashSet (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.util.LinkedList (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "java.util.Set (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.VertexPair (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.visit.GraphVisitHandler (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.visit.VisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.visit.VisitGraphBuilder (classes)";
   "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "java.lang.String (java.base)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "org.apache.commons.graph.utils.Assertions (classes)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "org.apache.commons.graph.visit.VisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.visit.DefaultVisitSourceSelector" -> "org.apache.commons.graph.visit.VisitSourceSelector (classes)";
   "org.apache.commons.graph.visit.GraphVisitHandler" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.GraphVisitHandler" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.GraphVisitHandler" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.visit.VisitAlgorithmsSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.VisitAlgorithmsSelector" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.VisitAlgorithmsSelector" -> "org.apache.commons.graph.visit.GraphVisitHandler (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "java.lang.Iterable (java.base)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "java.util.Iterator (java.base)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.DirectedGraph (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.Graph (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.model.BaseMutableGraph (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.model.DirectedMutableGraph (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.model.UndirectedMutableGraph (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.visit.BaseGraphVisitHandler (classes)";
   "org.apache.commons.graph.visit.VisitGraphBuilder" -> "org.apache.commons.graph.visit.VisitState (classes)";
   "org.apache.commons.graph.visit.VisitSourceSelector" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.VisitSourceSelector" -> "org.apache.commons.graph.visit.VisitAlgorithmsSelector (classes)";
   "org.apache.commons.graph.visit.VisitState"        -> "java.lang.Class (java.base)";
   "org.apache.commons.graph.visit.VisitState"        -> "java.lang.Enum (java.base)";
   "org.apache.commons.graph.visit.VisitState"        -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.visit.VisitState"        -> "java.lang.String (java.base)";
   "org.apache.commons.graph.visit.package-info"      -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.Monoid"           -> "java.io.Serializable (java.base)";
   "org.apache.commons.graph.weight.Monoid"           -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.OrderedMonoid"    -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.OrderedMonoid"    -> "java.util.Comparator (java.base)";
   "org.apache.commons.graph.weight.OrderedMonoid"    -> "org.apache.commons.graph.weight.Monoid (classes)";
   "org.apache.commons.graph.weight.package-info"     -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.BigDecimalWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.BigDecimalWeightBaseOperations" -> "java.math.BigDecimal (java.base)";
   "org.apache.commons.graph.weight.primitive.BigDecimalWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.BigIntegerWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.BigIntegerWeightBaseOperations" -> "java.math.BigInteger (java.base)";
   "org.apache.commons.graph.weight.primitive.BigIntegerWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations" -> "java.lang.Double (java.base)";
   "org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations" -> "java.lang.Float (java.base)";
   "org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations" -> "java.lang.Integer (java.base)";
   "org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.LongWeightBaseOperations" -> "java.lang.Long (java.base)";
   "org.apache.commons.graph.weight.primitive.LongWeightBaseOperations" -> "java.lang.Object (java.base)";
   "org.apache.commons.graph.weight.primitive.LongWeightBaseOperations" -> "org.apache.commons.graph.weight.OrderedMonoid (classes)";
   "org.apache.commons.graph.weight.primitive.package-info" -> "java.lang.Object (java.base)";
}
